server:
  port: 8080

spring:
  main:
    allow-circular-references: true
  application:
    name: quaoar
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_DATABASE:db_quaoar}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:root}
    driverClassName: org.postgresql.Driver
    hikari:
      maximum-pool-size: 3000
      minimum-idle: 5
      idle-timeout: 300000
      pool-name: ProductionQuaoarPool
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: update
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml

messaging:
  active: ${ACTIVE_MESSAGING_SERVICE:RABBITMQ}
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}
    virtual-host: ${RABBIT_MQ_VIRTUAL_HOST:quaoar}
    connection-timeout: ${RABBIT_MQ_CONNECTION_TIMEOUT:300000}
  aws:
    access: ${AWS_ACCESS_KEY:}
    secret: ${AWS_SECRET_KEY:}
    region: ${AWS_REGION:}

broker:
  consumer:
    queues:
      delete-user: "queue-delete-user"
      change-user: "queue-change-user-info"
      subscribe-topic: "queue-subscribe-to-topic"
      unsubscribe-topics: "queue-unsubscribe-from-topics"
    routing-keys:
      delete-user: "key-delete-user"
      change-user: "key-change-user-info"
      subscribe-topic: "key-subscribe-to-topic"
      unsubscribe-topics: "key-unsubscribe-from-topics"
    exchange:
      name: "quaoar.topic"
    concurrent-consumers: 2
    prefetch-count: 15